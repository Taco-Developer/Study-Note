<h1>{{title}}</h1>
{{! 게시글 제목 }}
{{#with post}}
  <h2 class='text-xl'>{{title}}</h2>
  {{! 작성자 이름 }}
  <div>
    작성자 :
    <b>{{writer}}</b>
  </div>
  <div>
    {{! 조회수와 작성일시 }}
    조회수 :
    {{hits}}
    | 작성일시 :
    {{dateString createdAt}}
    {{! 게시글 버튼 영역 }}
    <button onclick='modifyPost()'>수정</button>
    <button onclick='deletePost()'>삭제</button>
  </div>

  <div>
    {{! 본문 표시 영역 }}
    <pre>{{content}}</pre>
  </div>

  <section>
    <div>
      {{! 댓글 개수 }}
      <h3>{{lengthOfList comments}}개의 댓글이 있습니다.</h3>
    </div>

    {{! 댓글 작성 폼 }}
    <form action='/write-comment' method='post'>
      {{! 게시글 id }}
      <input type='hidden' name='id' value='{{_id}}' />
      <div>
        <div>
          <input type='text' name='name' placeholder='이름' />
          <input type='password' name='password' placeholder='비밀번호' />
        </div>
        <div>
          <textarea
            name='comment'
            placeholder='댓글을 입력해주세요.'
            cols='40'
            rows='3'
          ></textarea>
          {{! 댓글 전송 버튼 }}
          <br />
          <br />
          <button>댓글 쓰기</button>
        </div>
      </div>
    </form>
  </section>

  {{! 댓글 표시 영역 }}
  <section>
    {{#each comments}}
      <div>
        <div>
          작성자 :
          <b>{{name}}</b>
        </div>
        <div>
          작성일시 :
          {{dateString createdAt}}
          <button onclick="deleteComment('{{idx}}')">삭제</button>
        </div>
      </div>
      <div>
        <pre>{{comment}}</pre>
      </div>
    {{/each}}
  </section>
{{/with}}

<footer>
  {{! 목록으로 가는 링크 }}
  <div>
    <a href='/'>목록으로</a>
  </div>
</footer>

<script>
  const postOption = { 
    method: 'POST', 
    headers: { 'Content-Type': 'application/json' },
  };

  async function modifyPost() { 
    const password = prompt('패스워드를 입력해주세요.'); 
    if (!password) { 
      return; 
    } //check-password API 호출 
    const result = await fetch('/check-password', {
      ...postOption, 
      body: JSON.stringify({id: '{{post._id}}', password})
      }
    );

    const data = await result.json(); // 패스워드가 일치하는 경우 수정 페이지로 이동 
    if (data.isExist) { 
      document.location = '/modify/{{post._id}}';
    } else {
      alert('잘못된 패스워드입니다.');
    } 
  }

  const deleteOption = { 
    method: 'DELETE',
    headers: { 'Content-Type': 'application/json' } 
  }; 

  async function deletePost() { 
    const password = prompt('삭제하려면 패스워드를 입력해주세요.');
    if(!password) { 
      return;
    } // delete API 호출 

    const result = await fetch('/delete', { 
      ...deleteOption, 
      body: JSON.stringify({
        id: '{{post._id}}',
        password
      })
    }); 
    
    // 결과에 따른 메시지 출력 
    const data = await result.json();
    if(!data.isSuccess) { 
      alert('삭제에 실패했습니다. 패스워드를 확인해주세요.');
      return;
    } 
    
    document.location = '/';
  } 

  async function deleteComment(idx) { 
    const password = prompt('삭제하려면 패스워드를 입력해주세요.'); 
    if (!password) {
      return; 
    } 
    
    // delete-comment API 호출 
    const result = await fetch('/delete-comment', {
      ...deleteOption, 
      body: JSON.stringify({
        id: '{{post._id}}',
        idx, 
        password
      })
    }); 
    
    // 댓글 삭제 실패 시 메시지 띄우고 함수 종료 
    const data = await result.json(); 
    if (!data.isSuccess) { 
      alert('삭제에 실패했습니다.패스워드를 확인해주세요.');
      return;
    } 
    
    // 성공 메시지를 띄우고 리프레시
    alert('삭제 성공!'); 
    document.location.reload(); 
  }
</script>